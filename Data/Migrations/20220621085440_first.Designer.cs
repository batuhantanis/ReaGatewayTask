// <auto-generated />
using System;
using Data.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Data.Migrations
{
    [DbContext(typeof(ReaDbContext))]
    [Migration("20220621085440_first")]
    partial class first
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.14")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Data.Entities.Concrete.AddressEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddressLine")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CityCode")
                        .HasColumnType("int");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2022, 6, 21, 11, 54, 39, 913, DateTimeKind.Local).AddTicks(1451));

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2022, 6, 21, 11, 54, 39, 917, DateTimeKind.Local).AddTicks(4239));

                    b.HasKey("Id");

                    b.ToTable("AddressEntity");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AddressLine = "1",
                            City = "Ankara",
                            CityCode = 6,
                            Country = "Turkey",
                            CreatedAt = new DateTime(2022, 6, 21, 11, 54, 39, 924, DateTimeKind.Local).AddTicks(5974),
                            UpdatedAt = new DateTime(2022, 6, 21, 11, 54, 39, 924, DateTimeKind.Local).AddTicks(6358)
                        },
                        new
                        {
                            Id = 2,
                            AddressLine = "2",
                            City = "İzmir",
                            CityCode = 35,
                            Country = "Turkey",
                            CreatedAt = new DateTime(2022, 6, 21, 11, 54, 39, 924, DateTimeKind.Local).AddTicks(6728),
                            UpdatedAt = new DateTime(2022, 6, 21, 11, 54, 39, 924, DateTimeKind.Local).AddTicks(6732)
                        },
                        new
                        {
                            Id = 3,
                            AddressLine = "3",
                            City = "NewYork",
                            CityCode = 355,
                            Country = "America",
                            CreatedAt = new DateTime(2022, 6, 21, 11, 54, 39, 924, DateTimeKind.Local).AddTicks(6735),
                            UpdatedAt = new DateTime(2022, 6, 21, 11, 54, 39, 924, DateTimeKind.Local).AddTicks(6736)
                        },
                        new
                        {
                            Id = 4,
                            AddressLine = "4",
                            City = "Los Angeles",
                            CityCode = 365,
                            Country = "America",
                            CreatedAt = new DateTime(2022, 6, 21, 11, 54, 39, 924, DateTimeKind.Local).AddTicks(6738),
                            UpdatedAt = new DateTime(2022, 6, 21, 11, 54, 39, 924, DateTimeKind.Local).AddTicks(6739)
                        });
                });

            modelBuilder.Entity("Data.Entities.Concrete.CustomerEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2022, 6, 21, 11, 54, 39, 925, DateTimeKind.Local).AddTicks(9153));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2022, 6, 21, 11, 54, 39, 925, DateTimeKind.Local).AddTicks(9594));

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.ToTable("CustomerEntity");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AddressId = 1,
                            CreatedAt = new DateTime(2022, 6, 21, 11, 54, 39, 928, DateTimeKind.Local).AddTicks(9063),
                            Email = "test@hotmail.com",
                            Name = "Batuhan",
                            UpdatedAt = new DateTime(2022, 6, 21, 11, 54, 39, 928, DateTimeKind.Local).AddTicks(9079)
                        },
                        new
                        {
                            Id = 2,
                            AddressId = 3,
                            CreatedAt = new DateTime(2022, 6, 21, 11, 54, 39, 928, DateTimeKind.Local).AddTicks(9097),
                            Email = "mehmet@hotmail.com",
                            Name = "Mehmet",
                            UpdatedAt = new DateTime(2022, 6, 21, 11, 54, 39, 928, DateTimeKind.Local).AddTicks(9099)
                        },
                        new
                        {
                            Id = 3,
                            AddressId = 2,
                            CreatedAt = new DateTime(2022, 6, 21, 11, 54, 39, 928, DateTimeKind.Local).AddTicks(9101),
                            Email = "jason@hotmail.com",
                            Name = "Jason",
                            UpdatedAt = new DateTime(2022, 6, 21, 11, 54, 39, 928, DateTimeKind.Local).AddTicks(9102)
                        },
                        new
                        {
                            Id = 4,
                            AddressId = 4,
                            CreatedAt = new DateTime(2022, 6, 21, 11, 54, 39, 928, DateTimeKind.Local).AddTicks(9104),
                            Email = "haluk@hotmail.com",
                            Name = "Haluk",
                            UpdatedAt = new DateTime(2022, 6, 21, 11, 54, 39, 928, DateTimeKind.Local).AddTicks(9105)
                        });
                });

            modelBuilder.Entity("Data.Entities.Concrete.OrderEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AddressId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2022, 6, 21, 11, 54, 39, 929, DateTimeKind.Local).AddTicks(2316));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2022, 6, 21, 11, 54, 39, 929, DateTimeKind.Local).AddTicks(2748));

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.HasIndex("CustomerId");

                    b.ToTable("OrderEntity");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AddressId = 1,
                            CreatedAt = new DateTime(2022, 6, 21, 11, 54, 39, 932, DateTimeKind.Local).AddTicks(5020),
                            CustomerId = 1,
                            Price = 180.0,
                            Quantity = 1,
                            Status = "Transferred",
                            UpdatedAt = new DateTime(2022, 6, 21, 11, 54, 39, 932, DateTimeKind.Local).AddTicks(5036)
                        },
                        new
                        {
                            Id = 2,
                            AddressId = 2,
                            CreatedAt = new DateTime(2022, 6, 21, 11, 54, 39, 932, DateTimeKind.Local).AddTicks(5058),
                            CustomerId = 2,
                            Price = 5500.0,
                            Quantity = 2,
                            Status = "NotPaid",
                            UpdatedAt = new DateTime(2022, 6, 21, 11, 54, 39, 932, DateTimeKind.Local).AddTicks(5060)
                        },
                        new
                        {
                            Id = 3,
                            AddressId = 4,
                            CreatedAt = new DateTime(2022, 6, 21, 11, 54, 39, 932, DateTimeKind.Local).AddTicks(5062),
                            CustomerId = 3,
                            Price = 800.0,
                            Quantity = 3,
                            Status = "Success",
                            UpdatedAt = new DateTime(2022, 6, 21, 11, 54, 39, 932, DateTimeKind.Local).AddTicks(5063)
                        },
                        new
                        {
                            Id = 4,
                            AddressId = 3,
                            CreatedAt = new DateTime(2022, 6, 21, 11, 54, 39, 932, DateTimeKind.Local).AddTicks(5065),
                            CustomerId = 4,
                            Price = 225.0,
                            Quantity = 4,
                            Status = "WaitingOrder",
                            UpdatedAt = new DateTime(2022, 6, 21, 11, 54, 39, 932, DateTimeKind.Local).AddTicks(5067)
                        });
                });

            modelBuilder.Entity("Data.Entities.Concrete.ProductEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2022, 6, 21, 11, 54, 39, 932, DateTimeKind.Local).AddTicks(8602));

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2022, 6, 21, 11, 54, 39, 932, DateTimeKind.Local).AddTicks(8972));

                    b.HasKey("Id");

                    b.ToTable("ProductEntity");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2022, 6, 21, 11, 54, 39, 933, DateTimeKind.Local).AddTicks(5791),
                            ImageUrl = "https://w.wallhaven.cc/full/k7/wallhaven-k7q9m7.png",
                            Name = "1. Product",
                            UpdatedAt = new DateTime(2022, 6, 21, 11, 54, 39, 933, DateTimeKind.Local).AddTicks(5799)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2022, 6, 21, 11, 54, 39, 933, DateTimeKind.Local).AddTicks(5817),
                            ImageUrl = "https://w.wallhaven.cc/full/k7/wallhaven-k7q9m7.png",
                            Name = "2. Product",
                            UpdatedAt = new DateTime(2022, 6, 21, 11, 54, 39, 933, DateTimeKind.Local).AddTicks(5818)
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2022, 6, 21, 11, 54, 39, 933, DateTimeKind.Local).AddTicks(5820),
                            ImageUrl = "https://w.wallhaven.cc/full/k7/wallhaven-k7q9m7.png",
                            Name = "3. Product",
                            UpdatedAt = new DateTime(2022, 6, 21, 11, 54, 39, 933, DateTimeKind.Local).AddTicks(5822)
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2022, 6, 21, 11, 54, 39, 933, DateTimeKind.Local).AddTicks(5823),
                            ImageUrl = "https://w.wallhaven.cc/full/k7/wallhaven-k7q9m7.png",
                            Name = "4. Product",
                            UpdatedAt = new DateTime(2022, 6, 21, 11, 54, 39, 933, DateTimeKind.Local).AddTicks(5824)
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2022, 6, 21, 11, 54, 39, 933, DateTimeKind.Local).AddTicks(5826),
                            ImageUrl = "https://w.wallhaven.cc/full/k7/wallhaven-k7q9m7.png",
                            Name = "5. Product",
                            UpdatedAt = new DateTime(2022, 6, 21, 11, 54, 39, 933, DateTimeKind.Local).AddTicks(5827)
                        });
                });

            modelBuilder.Entity("OrderEntityProductEntity", b =>
                {
                    b.Property<int>("OrderEntitiesId")
                        .HasColumnType("int");

                    b.Property<int>("ProductsId")
                        .HasColumnType("int");

                    b.HasKey("OrderEntitiesId", "ProductsId");

                    b.HasIndex("ProductsId");

                    b.ToTable("OrderEntityProductEntity");
                });

            modelBuilder.Entity("Data.Entities.Concrete.CustomerEntity", b =>
                {
                    b.HasOne("Data.Entities.Concrete.AddressEntity", "Address")
                        .WithMany("Customer")
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Address");
                });

            modelBuilder.Entity("Data.Entities.Concrete.OrderEntity", b =>
                {
                    b.HasOne("Data.Entities.Concrete.AddressEntity", "Address")
                        .WithMany("Orders")
                        .HasForeignKey("AddressId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Data.Entities.Concrete.CustomerEntity", "Customer")
                        .WithMany("OrderEntities")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Address");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("OrderEntityProductEntity", b =>
                {
                    b.HasOne("Data.Entities.Concrete.OrderEntity", null)
                        .WithMany()
                        .HasForeignKey("OrderEntitiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Entities.Concrete.ProductEntity", null)
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Data.Entities.Concrete.AddressEntity", b =>
                {
                    b.Navigation("Customer");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Data.Entities.Concrete.CustomerEntity", b =>
                {
                    b.Navigation("OrderEntities");
                });
#pragma warning restore 612, 618
        }
    }
}
